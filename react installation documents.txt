react installing commands:

npx create-react-app myapp

npm i bootstrap

npm install react-router-dom

npm install redux react-redux

npm install react-hook-form

npm install @testing-library/react

npm install eslint --save-dev




backend installs :
-----------------------------------------------------

1. Initialize a Node.js Project:

	npm init -y  (to create a package.json file in backend folder)
-----------------------------------------------------------------------------------

2. Install Required Packages:

	Install Express and other necessary packages:

	npm install express body-parser fs
----------------------------------------------------------------------------------

Step 3: Create the Server File
Create a server.js File:

In the backend folder, create a file named server.js.
bash
Copy code
touch server.js
Set Up Your Express Server:

Open server.js in your code editor and add the following code:
javascript
Copy code
const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = 5000;

app.use(bodyParser.json());

app.post('/register', (req, res) => {
  const newUser = req.body;

  // Read existing data
  fs.readFile(path.join(__dirname, 'data.json'), 'utf8', (err, data) => {
    if (err) {
      return res.status(500).send('Error reading data file');
    }

    const jsonData = JSON.parse(data);
    jsonData.push(newUser);

    // Write updated data back to the file
    fs.writeFile(path.join(__dirname, 'data.json'), JSON.stringify(jsonData, null, 2), (err) => {
      if (err) {
        return res.status(500).send('Error writing to data file');
      }
      res.status(201).send('User registered successfully');
    });
  });
});

app.listen(PORT, () => {
  console.log(`Server running on http://localhost:${PORT}`);
});
Let me know when you’ve added this code, and we’ll proceed to create the data.json file!

-----------------------------------------------------------------------------------------------------------------------------


Step 4: Create the data.json File
Create the data.json File:

In the backend folder, create a file named data.json. You can do this via the terminal or directly in VS Code.
If using the terminal, run:

echo "[]" > data.json

